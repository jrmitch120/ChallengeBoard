@using ChallengeBoard.ViewModels
@using NGravatar.Html
@model ProfileViewModel

@{
    ViewBag.Title = "Profile";
}
@Html.Partial("_HeaderPartial", new ChallengeBoard.Infrastucture.PageHeader(Model.Competitor.Name, "Profile"))
@Html.Partial("_BoardNav", Model.Board)
<div class="row">
    <section >
        <div class="span5">
            <div class="well hide-overflow">
                <div id="profileAvatar">
                    @Html.Gravatar(Model.Competitor.Profile.EmailAddress, 155, null, NGravatar.Rating.PG, new { @class ="radius2" })
                    <div id="profileRating">
                        @if (Model.Competitor.MatchesPlayed == 0)
                        {
                            @:N/A
                        }
                        else
                        {
                            @Html.DisplayFor(m => m.Competitor.Rating)
                        }
                        
                    </div>
                    <div><small>@Html.DisplayNameFor(m => m.Competitor.Rating)</small></div>
                </div>
                <div class="span2">
                    <table class="table">
                        <tr>
                            <td>@Html.DisplayNameFor(m => m.Competitor.MatchesPlayed):</td>
                            <td>@Html.DisplayFor(m => m.Competitor.MatchesPlayed)</td>
                        </tr>
                        <tr>
                            <td>@Html.DisplayNameFor(m => m.Competitor.Wins):</td>
                            <td>@Html.DisplayFor(m => m.Competitor.Wins)</td>
                        </tr>
                        <tr>
                            <td>@Html.DisplayNameFor(m => m.Competitor.Loses):</td>
                            <td>@Html.DisplayFor(m => m.Competitor.Loses)</td>
                        </tr>
                        <tr>
                            <td>@Html.DisplayNameFor(m => m.Competitor.Ties):</td>
                            <td>@Html.DisplayFor(m => m.Competitor.Ties)</td>
                        </tr>
                        <tr>
                            <td>@Html.DisplayNameFor(m => m.Competitor.Streak):</td>
                            <td>@Html.DisplayFor(m => m.Competitor.Streak)</td>
                        </tr>
                        <tr>
                            <td>@Html.DisplayNameFor(m => m.Competitor.WinPercentage):</td>
                            <td>@Html.DisplayFor(m => m.Competitor.WinPercentage)</td>
                        </tr>
                    </table>
                </div>
            </div>
        </div>
    </section>
    <div class="span7">
        <section>
            Coming Soon!  Bio's
        </section>
    </div>
</div>
<h2>Matches 
    
    <i id="matchCollapser" data-toggle="collapse" data-target="#matchContainer" class="icon-minus-sign icon-white collapser"></i>
    
</h2>
<div id="matchContainer" class="in">
    @if (Model.Matches.Any())
    {
        @Html.Partial("_MatchesPartial", new MatchesViewModel { Matches = Model.Matches })
    }
    else
    {
        <div class="well">
            @Html.DisplayFor(m => m.Competitor.Name) has not participated in any matches yet.
        </div>
    }
</div>
<h2>Head to Head 
    <i id="pvpCollasper" data-toggle="collapse" data-target="#pvpContainer" class="icon-minus-sign icon-white collapser"></i>
</h2>
<div id="pvpContainer" class="in">
@if (Model.Stats.Pvp.Any())
{
    @Html.Partial("_PvpPartial", new PvpViewModel { BoardId = Model.Board.BoardId, Stats = Model.Stats })
}
else
{
    <div class="well">
        There are currently no head to head stats for @Html.DisplayFor(m => m.Competitor.Name).
    </div>
}
</div>
@section Scripts {
    @Scripts.Render("~/bundles/components")
    
    <script type="text/javascript">
        $(function () {
            // Matches
            $(".sortedTable:eq(0)").tablesorter({
                headers: {
                    0: { sorter: 'eloChange' },
                    2: { sorter: 'eloChange' }
                },
                sortList: [[5, 1]],
                sortInitialOrder: 'desc'
            });
            
            // Head To Head
            $(".sortedTable:eq(1)").tablesorter({
                sortList: [[6, 1]],
                sortInitialOrder: 'desc'
            });

            $('#matchCollapser').on('click', function () {
                if ($('#matchCollapser').hasClass('icon-plus-sign'))
                    $('#matchCollapser').removeClass('icon-plus-sign').addClass('icon-minus-sign');
                else
                    $('#matchCollapser').removeClass('icon-minus-sign').addClass('icon-plus-sign');
            });
            
            $('#pvpCollasper').on('click', function () {
                if ($('#pvpCollasper').hasClass('icon-plus-sign'))
                    $('#pvpCollasper').removeClass('icon-plus-sign').addClass('icon-minus-sign');
                else
                    $('#pvpCollasper').removeClass('icon-minus-sign').addClass('icon-plus-sign');
            });
        });
    </script>
}
